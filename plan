RAII style

scoped_lock(rcu, mutex, ...) framework
debug framework

thread framework
struct thread_info {
    void *init();
    void *work();
}

work(){
    init();
    barrier();
    self_work();
}


mlrcu
simple rcu
hazard pointer
concurrent linked list
** hash table
receiver and sender

workqueue
softirq

---

basic container - hash table
    - hash function crc32c
    - table[NR_xx]->linked_list
        - recycle: simple rcu + workqueue
    => related: linked list, workqueue, simple rcu (async)

Advance - mlrcu, scoped_lock
    - use hash table

debug framework
    - print, macro
    - thread framework
        - centralized barrier
